{"version":3,"file":"sidebar.min.js","sources":["../../js/newFileDialog.js","../../js/sidebar.js?commonjs-entry","../../js/sidebar.js"],"sourcesContent":["const INVALID_FILE_SIZE = \"File is too big.\"\nconst ONE_FILE_MAXIMUM = \"Multiple files upload is not allowed.\"\nconst FILE_REQUIRED = \"File required.\"\nconst MAX_FILE_SIZE = 5242880 // 5 MB\n\nclass NewFileDialog {\n    #dialog\n\n    constructor(htmlElement) {\n        if (htmlElement instanceof HTMLElement) {\n            this.#dialog = htmlElement\n        } else {\n            this.#dialog = document.querySelector(htmlElement)\n        }\n\n        if (!this.#dialog) {\n            throw new Error(\n                \"New file dialog element provided is undefined or null.\"\n            )\n        }\n\n        const checkValidity = this.#checkValidity.bind(this)\n\n        const fileInput = this.#dialog.querySelector(\"input.file-input\")\n\n        if (fileInput) {\n            fileInput.addEventListener(\"change\", () => {\n                checkValidity(fileInput)\n            })\n        }\n\n        const form = this.#dialog.querySelector(\"#new-file-form\")\n        if (form) {\n            form.addEventListener(\"submit\", (e) => {\n                checkValidity(fileInput)\n                if (!fileInput.validity.valid) {\n                    e.preventDefault()\n                }\n            })\n        }\n    }\n\n    show() {\n        this.#dialog.showModal()\n    }\n\n    #checkValidity(fileInput) {\n        const validatorHint = this.#dialog.querySelector(\".validator-hint\")\n\n        fileInput.setCustomValidity(\"\")\n        validatorHint.textContent = \"\"\n\n        const files = [...fileInput.files]\n        if (files.length <= 0) {\n            fileInput.setCustomValidity(FILE_REQUIRED)\n            validatorHint.textContent = FILE_REQUIRED\n            return\n        }\n\n        if (files.length > 1) {\n            fileInput.setCustomValidity(ONE_FILE_MAXIMUM)\n            validatorHint.textContent = ONE_FILE_MAXIMUM\n            return\n        }\n\n        const file = files[0]\n        if (file.size > MAX_FILE_SIZE) {\n            fileInput.setCustomValidity(INVALID_FILE_SIZE)\n            validatorHint.textContent = INVALID_FILE_SIZE\n            return\n        }\n    }\n}\n\nmodule.exports = NewFileDialog\n","import { getDefaultExportFromCjs } from \"\u0000commonjsHelpers.js\";\nimport { __require as requireSidebar } from \"/home/asanchez/Work/OdinProject/React-path/Node/file-uploader/js/sidebar.js\";\nvar sidebarExports = requireSidebar();\nexport { sidebarExports as __moduleExports };\nexport default /*@__PURE__*/getDefaultExportFromCjs(sidebarExports);","const NewFileDialog = require(\"./newFileDialog\")\n\nconst newFileDialog = new NewFileDialog(\"#new-file-dialog\")\nconst newFileBtns = [...document.querySelectorAll(\".open-new-file\")]\n\nnewFileBtns.forEach((btn) => {\n    btn.addEventListener(\"click\", () => {\n        newFileDialog.show()\n    })\n})\n\nconst newFolderDialog = document.querySelector(\"#new-folder-dialog\")\nconst newFolderBtns = [...document.querySelectorAll(\".open-new-folder\")]\n\nnewFolderBtns.forEach((btn) => {\n    btn.addEventListener(\"click\", () => {\n        newFolderDialog.showModal()\n    })\n})\n\nconst deleteFolderDialog = document.querySelector(\"#delete-folder-dialog\")\nconst deleteFolderBtns = [...document.querySelectorAll(\".open-delete-folder\")]\n\ndeleteFolderBtns.forEach((btn) => {\n    btn.addEventListener(\"click\", () => {\n        deleteFolderDialog.showModal()\n    })\n})\n"],"names":["INVALID_FILE_SIZE","ONE_FILE_MAXIMUM","FILE_REQUIRED","newFileDialog","dialog","constructor","htmlElement","HTMLElement","this","document","querySelector","Error","checkValidity","bind","fileInput","addEventListener","form","e","validity","valid","preventDefault","show","showModal","validatorHint","setCustomValidity","textContent","files","length","size","sidebarExports","require$$0","querySelectorAll","forEach","btn","newFolderDialog","deleteFolderDialog","requireSidebar","sidebar","getDefaultExportFromCjs"],"mappings":"mGAAA,MAAMA,EAAoB,mBACpBC,EAAmB,wCACnBC,EAAgB,wBAwEtBC,EArEA,MACIC,GAEA,WAAAC,CAAYC,GAOR,GANIA,aAAuBC,YACvBC,MAAKJ,EAAUE,EAEfE,MAAKJ,EAAUK,SAASC,cAAcJ,IAGrCE,MAAKJ,EACN,MAAM,IAAIO,MACN,0DAIR,MAAMC,EAAgBJ,MAAKI,EAAeC,KAAKL,MAEzCM,EAAYN,MAAKJ,EAAQM,cAAc,oBAEzCI,GACAA,EAAUC,iBAAiB,SAAU,KACjCH,EAAcE,KAItB,MAAME,EAAOR,MAAKJ,EAAQM,cAAc,kBACpCM,GACAA,EAAKD,iBAAiB,SAAWE,IAC7BL,EAAcE,GACTA,EAAUI,SAASC,OACpBF,EAAEG,kBAItB,CAEI,IAAAC,GACIb,MAAKJ,EAAQkB,WACrB,CAEI,EAAAV,CAAeE,GACX,MAAMS,EAAgBf,MAAKJ,EAAQM,cAAc,mBAEjDI,EAAUU,kBAAkB,IAC5BD,EAAcE,YAAc,GAE5B,MAAMC,EAAQ,IAAIZ,EAAUY,OAC5B,GAAIA,EAAMC,QAAU,EAGhB,OAFAb,EAAUU,kBAAkBtB,QAC5BqB,EAAcE,YAAcvB,GAIhC,GAAIwB,EAAMC,OAAS,EAGf,OAFAb,EAAUU,kBAAkBvB,QAC5BsB,EAAcE,YAAcxB,GAKhC,OADayB,EAAM,GACVE,KA/DK,SAgEVd,EAAUU,kBAAkBxB,QAC5BuB,EAAcE,YAAczB,SAFhC,CAKR,GCrEA,IAAI6B,+BCFJ,MAEM1B,EAAgB,IAFA2B,IAEA,CAAkB,oBACpB,IAAIrB,SAASsB,iBAAiB,mBAEtCC,QAASC,IACjBA,EAAIlB,iBAAiB,QAAS,KAC1BZ,EAAckB,WAItB,MAAMa,EAAkBzB,SAASC,cAAc,sBACzB,IAAID,SAASsB,iBAAiB,qBAEtCC,QAASC,IACnBA,EAAIlB,iBAAiB,QAAS,KAC1BmB,EAAgBZ,gBAIxB,MAAMa,EAAqB1B,SAASC,cAAc,+BACzB,IAAID,SAASsB,iBAAiB,wBAEtCC,QAASC,IACtBA,EAAIlB,iBAAiB,QAAS,KAC1BoB,EAAmBb,kBDvBNc,GAErBC,EAA4BC,EAAwBT"}