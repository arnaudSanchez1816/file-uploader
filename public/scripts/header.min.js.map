{"version":3,"file":"header.min.js","sources":["../../js/header.js"],"sourcesContent":["function detectColorScheme() {\n    let theme = \"light\" //default to light\n\n    //local storage is used to override OS theme settings\n    if (localStorage.getItem(\"theme\")) {\n        if (localStorage.getItem(\"theme\") === \"dark\") {\n            theme = \"dark\"\n        }\n    } else if (\n        window.matchMedia &&\n        window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n    ) {\n        //OS theme setting detected as dark\n        theme = \"dark\"\n    }\n\n    return theme\n}\n\nfunction applyTheme(theme, saveStorage = true) {\n    document.documentElement.setAttribute(\"data-theme\", theme)\n    if (saveStorage) {\n        localStorage.setItem(\"theme\", theme)\n    }\n}\n\nconst themeController = document.querySelector(\".theme-controller\")\nconst theme = detectColorScheme()\nif (themeController) {\n    themeController.checked = theme === \"dark\"\n\n    themeController.addEventListener(\"change\", () => {\n        const newTheme = themeController.checked ? \"dark\" : \"light\"\n        applyTheme(newTheme, true)\n    })\n}\n\napplyTheme(theme, false)\n"],"names":["applyTheme","theme","saveStorage","document","documentElement","setAttribute","localStorage","setItem","themeController","querySelector","getItem","window","matchMedia","matches","detectColorScheme","checked","addEventListener"],"mappings":"AAmBA,SAASA,EAAWC,EAAOC,GAAc,GACrCC,SAASC,gBAAgBC,aAAa,aAAcJ,GAChDC,GACAI,aAAaC,QAAQ,QAASN,EAEtC,CAEA,MAAMO,EAAkBL,SAASM,cAAc,qBACzCR,EA3BN,WACI,IAAIA,EAAQ,QAeZ,OAZIK,aAAaI,QAAQ,SACiB,SAAlCJ,aAAaI,QAAQ,WACrBT,EAAQ,QAGZU,OAAOC,YACPD,OAAOC,WAAW,gCAAgCC,UAGlDZ,EAAQ,QAGLA,CACX,CAUca,GACVN,IACAA,EAAgBO,QAAoB,SAAVd,EAE1BO,EAAgBQ,iBAAiB,SAAU,KAEvChB,EADiBQ,EAAgBO,QAAU,OAAS,SAC/B,MAI7Bf,EAAWC,GAAO"}