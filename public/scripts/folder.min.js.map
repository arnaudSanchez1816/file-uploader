{"version":3,"file":"folder.min.js","sources":["../../js/folder.js?commonjs-entry","../../js/folder.js","../../js/fileDetailsDialog.js"],"sourcesContent":["import { getDefaultExportFromCjs } from \"\u0000commonjsHelpers.js\";\nimport { __require as requireFolder } from \"/home/asanchez/Work/OdinProject/React-path/Node/file-uploader/js/folder.js\";\nvar folderExports = requireFolder();\nexport { folderExports as __moduleExports };\nexport default /*@__PURE__*/getDefaultExportFromCjs(folderExports);","const FileDetailsDialog = require(\"./fileDetailsDialog\")\nconst { parseBigInt } = require(\"./helpers\")\n\nconst files = parseBigInt(document.querySelector(\"#files-data\").textContent)\nconst fileDetails = new FileDetailsDialog(\"#file-details-dialog\")\n\nconst filesButtons = [...document.querySelectorAll(\"button.file\")]\n\nfilesButtons.forEach((btn) => {\n    btn.addEventListener(\"click\", () => {\n        const fileId = btn.dataset.id\n        if (!fileId) {\n            throw new Error(`No id specified for this file button (${btn}).`)\n        }\n        const file = files.filter((file) => file.id === +fileId)[0]\n        fileDetails.showFile(file)\n    })\n})\n","class FileDetailsDialog {\n    #dialog\n\n    constructor(htmlElement) {\n        if (htmlElement instanceof HTMLElement) {\n            this.#dialog = htmlElement\n        } else {\n            this.#dialog = document.querySelector(htmlElement)\n        }\n\n        if (!this.#dialog) {\n            throw new Error(\n                \"File details dialog element provided is undefined or null.\"\n            )\n        }\n    }\n\n    showFile({ id, name, createdAt, size }) {\n        if (!this.#dialog) {\n            console.error(\"File details dialog element is invalid !\")\n            return\n        }\n\n        const dialog = this.#dialog\n\n        const fileNames = [...dialog.querySelectorAll(\".file-name\")]\n        fileNames.forEach((element) => (element.textContent = name))\n\n        const fileSizes = [...dialog.querySelectorAll(\".file-size\")]\n        fileSizes.forEach((element) => (element.textContent = size))\n\n        const fileCreated = [...dialog.querySelectorAll(\".file-created\")]\n        fileCreated.forEach((element) => (element.textContent = createdAt))\n\n        const downloadLink = dialog.querySelector(\"a.download\")\n        downloadLink.href = `/files/${id}`\n\n        const deleteForm = dialog.querySelector(\"form.delete\")\n        deleteForm.action = `/files/${id}?_method=DELETE`\n\n        dialog.showModal()\n    }\n}\n\nmodule.exports = FileDetailsDialog\n"],"names":["folder","getDefaultExportFromCjs","FileDetailsDialog","fileDetailsDialog","dialog","constructor","htmlElement","HTMLElement","this","document","querySelector","Error","showFile","id","name","createdAt","size","console","error","querySelectorAll","forEach","element","textContent","href","action","showModal","parseBigInt","require$$1","files","fileDetails","btn","addEventListener","fileId","dataset","file","filter","requireFolder"],"mappings":"uEAEA,IAEAA,EAA4BC,+BCJ5B,MAAMC,WC4CNC,EA5CA,MACIC,GAEA,WAAAC,CAAYC,GAOR,GANIA,aAAuBC,YACvBC,MAAKJ,EAAUE,EAEfE,MAAKJ,EAAUK,SAASC,cAAcJ,IAGrCE,MAAKJ,EACN,MAAM,IAAIO,MACN,6DAGhB,CAEI,QAAAC,EAASC,GAAEA,EAAEC,KAAEA,EAAIC,UAAEA,EAASC,KAAEA,IAC5B,IAAKR,MAAKJ,EAEN,YADAa,QAAQC,MAAM,4CAIlB,MAAMd,EAASI,MAAKJ,EAEF,IAAIA,EAAOe,iBAAiB,eACpCC,QAASC,GAAaA,EAAQC,YAAcR,GAEpC,IAAIV,EAAOe,iBAAiB,eACpCC,QAASC,GAAaA,EAAQC,YAAcN,GAElC,IAAIZ,EAAOe,iBAAiB,kBACpCC,QAASC,GAAaA,EAAQC,YAAcP,GAEnCX,EAAOM,cAAc,cAC7Ba,KAAO,UAAUV,IAEXT,EAAOM,cAAc,eAC7Bc,OAAS,UAAUX,mBAE9BT,EAAOqB,WACf,KDxCMC,YAAEA,GAAgBC,IAElBC,EAAQF,EAAYjB,SAASC,cAAc,eAAeY,aAC1DO,EAAc,IAAI3B,EAAkB,8BAErB,IAAIO,SAASU,iBAAiB,gBAEtCC,QAASU,IAClBA,EAAIC,iBAAiB,QAAS,KAC1B,MAAMC,EAASF,EAAIG,QAAQpB,GAC3B,IAAKmB,EACD,MAAM,IAAIrB,MAAM,yCAAyCmB,OAE7D,MAAMI,EAAON,EAAMO,OAAQD,GAASA,EAAKrB,MAAQmB,GAAQ,GACzDH,EAAYjB,SAASsB,SDbTE"}